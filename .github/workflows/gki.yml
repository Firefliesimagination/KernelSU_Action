name: Build GKI Kernel
on:
  watch:
    types: [started]

  workflow_dispatch:

jobs:
  build:
    name: Build Kernel by ${{ github.actor }}
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
    - uses: actions/checkout@v3
    - name: Download prebuilt toolchain
      run: |
          sudo apt update -y && sudo apt install ccache
          AOSP_MIRROR=https://android.googlesource.com
          BRANCH=master-kernel-build-2022
          git clone $AOSP_MIRROR/platform/prebuilts/build-tools -b $BRANCH --depth 1 build-tools
          git clone $AOSP_MIRROR/kernel/prebuilts/build-tools -b $BRANCH --depth 1 kernel-build-tools
          git clone $AOSP_MIRROR/platform/system/tools/mkbootimg -b $BRANCH --depth 1
          ls -a kernel-build-tools/linux-x86/share/avb/

    - name: Setup kernel source
      run: |
          cd $GITHUB_WORKSPACE
          git clone https://github.com/tiann/KernelSU
          git clone https://gerrit.googlesource.com/git-repo
          mkdir android-kernel && cd android-kernel
          ../git-repo/repo init --depth=1 --u https://android.googlesource.com/kernel/manifest -b common-android13-5.15-2023-04
          ../git-repo/repo sync -j$(nproc --all)

    - name: Setup Drivers
      run: |
          cd $GITHUB_WORKSPACE/android-kernel
          GKI_ROOT=$(pwd)
          ln -sf $GITHUB_WORKSPACE/qaq $GKI_ROOT/common/drivers/qaq
          ln -sf $GITHUB_WORKSPACE/KernelSU/kernel $GKI_ROOT/common/drivers/kernelsu
          DRIVER_MAKEFILE=$GKI_ROOT/common/drivers/Makefile
          echo "obj-y += qaq/" >> $DRIVER_MAKEFILE
          echo "obj-y += kernelsu/" >> $DRIVER_MAKEFILE
          cd $GKI_ROOT/common/ && git apply $GITHUB_WORKSPACE/gki.patch
          sed -i 's/-dirty//g' $GKI_ROOT/common/scripts/setlocalversion

    - name: Build Image
      working-directory: android-kernel
      run: CCACHE="/usr/bin/ccache" LTO=thin BUILD_CONFIG=common/build.config.gki.aarch64 build/build.sh

    - name: Build bootimg
      run: |
          export AVBTOOL=$GITHUB_WORKSPACE/kernel-build-tools/linux-x86/bin/avbtool
          export GZIP=$GITHUB_WORKSPACE/build-tools/path/linux-x86/gzip
          export LZ4=$GITHUB_WORKSPACE/build-tools/path/linux-x86/lz4
          export MKBOOTIMG=$GITHUB_WORKSPACE/mkbootimg/mkbootimg.py
          export UNPACK_BOOTIMG=$GITHUB_WORKSPACE/mkbootimg/unpack_bootimg.py
          cd $GITHUB_WORKSPACE/android-kernel/out/android13-5.15/dist
          ls -a ./
          git clone https://github.com/Kernel-SU/AnyKernel3
          rm -rf ./AnyKernel3/.git
          cp Image ./AnyKernel3/

    - name: Upload Output
      uses: actions/upload-artifact@v3
      with:
        name: AnyKernel3-android13-5.15-2023-04
        path: android-kernel/out/android13-5.15/dist/AnyKernel3/*

          