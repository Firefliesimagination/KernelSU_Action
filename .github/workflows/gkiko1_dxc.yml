name: Build deprecated gki ko_dxc
on:
  workflow_dispatch:
    inputs:
      TAG:
        required: true
        default: "android12-5.10-2022-05"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_MAXSIZE: "2G"
      CCACHE_HARDLINK: "true"
    steps:
    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 8192
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
    - uses: actions/checkout@main
    - uses: hendrikmuhs/ccache-action@main
      with:
        key: ${{ github.event.inputs.TAG }}
        append-timestamp: false
    - name: Download Kernel Source
      run: |
        cd $GITHUB_WORKSPACE
        git clone https://gerrit.googlesource.com/git-repo
        mkdir android-kernel && cd android-kernel
        ../git-repo/repo init --depth=1 --u https://android.googlesource.com/kernel/manifest -b common-${{ inputs.TAG }}
        REMOTE_BRANCH=$(git ls-remote https://android.googlesource.com/kernel/common ${{ inputs.TAG }})
        if grep -q deprecated <<< $REMOTE_BRANCH; then
          echo "Found deprecated branch: ${{ inputs.TAG }}"
          sed -i 's/"${{ inputs.TAG }}"/"deprecated\/${{ inputs.TAG }}"/g' .repo/manifests/default.xml
          cat .repo/manifests/default.xml
        fi
        ../git-repo/repo sync -j$(nproc --all)
        cp $GITHUB_WORKSPACE/list.h common/include/linux/list.h
        echo "[+] drivers setup"
        GKI_ROOT=$(pwd)
        echo "[+] GKI_ROOT: $GKI_ROOT"
        echo "[+] Copy kernel hack driver to $GKI_ROOT/common/drivers"
        ln -sf $GITHUB_WORKSPACE/dxc $GKI_ROOT/common/drivers/qaq
        echo "[+] Add kernel hack driver to Makefile"
        DRIVER_MAKEFILE=$GKI_ROOT/common/drivers/Makefile
        echo "obj-y += qaq/" >> $DRIVER_MAKEFILE
        echo "[+] drivers setup Done."
        cd -
    - name: Build Boot
      working-directory: android-kernel
      env:
        ktag: ${{ github.event.inputs.TAG }}
        chatid: ${{ secrets.TELEGRAM_CHAT_ID }}
        bottoken: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      run: |
        $GITHUB_WORKSPACE/listen.sh dmz1.ko & echo 666
        CCACHE="/usr/bin/ccache" LTO=thin BUILD_CONFIG=common/build.config.gki.aarch64 build/build.sh
