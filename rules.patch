--- KernelSU/kernel/selinux/rules.c	2023-04-19 22:32:58.485867518 +0800
+++ KernelSU/kernel/selinux/rules1.c	2023-04-19 23:04:47.977867632 +0800
@@ -21,8 +21,7 @@
 static struct policydb *get_policydb(void)
 {
 	struct policydb *db;
-// selinux_state does not exists before 4.19
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 9, 337)
+
 #ifdef SELINUX_POLICY_INSTEAD_SELINUX_SS
 	struct selinux_policy *policy = rcu_dereference(selinux_state.policy);
 	db = &policy->policydb;
@@ -30,9 +29,7 @@
 	struct selinux_ss *ss = rcu_dereference(selinux_state.ss);
 	db = &ss->policydb;
 #endif
-#else
-	db = &policydb;
-#endif
+
 	return db;
 }
 
@@ -170,18 +167,12 @@
 // reset avc cache table, otherwise the new rules will not take effect if already denied
 static void reset_avc_cache()
 {
-#if ((KERNEL_VERSION(4, 14, 0) <= LINUX_VERSION_CODE) &&                       \
-     (LINUX_VERSION_CODE < KERNEL_VERSION(4, 14, 163))) ||                     \
-	(LINUX_VERSION_CODE < KERNEL_VERSION(4, 9, 337))
-	avc_ss_reset(0);
-	selnl_notify_policyload(0);
-	selinux_status_update_policyload(0);
-#else
+
 	struct selinux_avc *avc = selinux_state.avc;
 	avc_ss_reset(avc, 0);
 	selnl_notify_policyload(0);
 	selinux_status_update_policyload(&selinux_state, 0);
-#endif
+
 	selinux_xfrm_notify_policyload();
 }
 
